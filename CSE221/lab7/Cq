You are in a city with N cities connected by M bi-directional roads. Each road has a danger level, where a higher number means the road is more dangerous.

You start in city 1 and need to go to every other city. The goal is to find the minimum danger level you would face to reach each city from city 1. The danger of a path is defined as the highest danger level of any road on that path.

For each city, find the minimum danger level of the path from city 1. If a city is not reachable from city 1, print −1. The danger of reaching city 1 is always 0.

Input
The first line contains two integers N,M(2≤N≤2⋅10^5,1≤M≤3⋅10^5) — the number of cities, the total number of roads.

The next M lines will contain three integers ui,vi,wi(1≤ui,vi≤N,1≤wi≤106) — node ui is connected to node vi with a weight wi.

Output
Output n integers, where i-th integer represents the minimum danger level you'd have to face in order to go from city 1 to city i.

Examples
InputCopy
4 3
2 1 3
2 3 5
3 4 3
OutputCopy
0 3 5 5
InputCopy
6 5
1 2 3
1 4 5
1 6 2
2 6 3
4 6 1
OutputCopy
0 3 -1 2 -1 2
InputCopy
2 1
2 1 5
OutputCopy
0 5
InputCopy
5 7
1 5 3
1 4 2
5 3 1
5 4 6
5 2 5
3 4 4
3 2 8
OutputCopy
0 5 3 2 3
